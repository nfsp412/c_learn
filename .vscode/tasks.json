// {
//   "tasks": [
//     {
//       "type": "cppbuild",//任务类型,可以取cppbuild、shell、process，三种执行时稍有差异，这里选择默认cppbuild。
//       "label": "build task 1",//任务标签(标记)，也即任务名称，任务名称要和launch.json里的"preLaunchTask"值对应一致。
//       "command": "C:\\MinGW\\bin\\gcc.exe",//编译器及其路径，.c用gcc.exe编译器，.cpp用g++.exe编译器,还可以是后面即将讲到的Cmake、make。
//       "args": [
//         "-fdiagnostics-color=always",
//         "-g",//生成和调试有关的信息，launch.json会用到这些信息。
 
//         // "${workspaceFolder}\\chapter01_hello_world\\ff1.c",
//         // "${workspaceFolder}\\chapter01_hello_world\\pp1.c",
//         // "${workspaceFolder}\\chapter01_hello_world\\test.c",
//         "${workspaceFolder}\\chapter01_hello_world\\hh.c",

//         "-I",//-I（大写i）声明为头文件路径。
//         //下面是第三方库的头文件位置，不指出完整路径,但代码中#include后面需要补全位置。
//         "C:\\Program Files\\OpenSSL-Win64\\include",
//         "-L",// -L 声明为库文件路径。
//         //使用的第三方库位置,需要指出完整位置。
//         "C:\\Program Files\\OpenSSL-Win64\\lib\\VC\\x64\\MD",
//         //-l（小写L)声明为库文件。
//         "-l",
//         "libcrypto",//要调用的库文件。
        
//         "-o",//指定编译的输出，windows系统下输出.exe文件,见下行。
//         //下面是windows系统下输出.exe文件及其路径,应该与launch.json的"program"的值代表的路径一致。
//         "${workspaceFolder}\\chapter01_hello_world\\chapter01.exe"
//       ],
//       "options": {
//         "cwd": "${workspaceFolder}"//当前工作目录(路径)。
//       },
//       "problemMatcher": ["$gcc"],//使用gcc的问题匹配器。
//       "group": {
//         "kind": "build",
//         "isDefault": true
//       },
//       "detail": "Task generated by Debugger."
//     }
//   ],
//   "version": "2.0.0"
// }
{
  "tasks": [
      {   //Cmake active file 操作，要和launch.json里的"preLaunchTask"值对应一致。
          "label": "Cmake active file", 
          "dependsOn":[
              //Cmake active file操作依赖于下面的cmake和 make操作,也即调用下面两个标签label的操作。
              "cmake", 
              "make"
          ]
      },
      {
          "label": "cmake",//cmake操作。
          "type":"shell",           
          "command":"cmake",//执行cmake操作所使用的命令。
          "args": [                 //cmake命令执行时的命令行参数。
              "-G MinGW Makefiles", //生成 mingw32-make 能够编译的Makefile。
              "../"
          ],
      },
      {
          "label": "make",              //make 操作。
          "command":"mingw32-make.exe", //执行 make 操作所使用的命令(mingw32-make.exe已经添加了环境变量)。
          "args": [
          ],
          "options": {
              "cwd": "${workspaceFolder}\\build" //表示执行当前操作的工作目录。
          }
      },
  ],
  "version": "2.0.0",
  "options": {
      "cwd": "${workspaceFolder}\\build"  //表示执行上述操作时的工作目录。
  },
}